
............1Error in signalCondition(e) :
      no function to return from, jumping to top level

> devtools::test()
    Loading sigpatsearch
    Testing sigpatsearch
    sigpatsearch: ........................................................................................1Error in signalCondition(e) :
          no function to return from, jumping to top level
          ....................................................................................................................
          Testing new wrapper for sigpatsearch: .

          Failed -------------------------------------------------------------------------
          1. Error: check class implementation chi (@test_sigpatsearch.R#239) ------------
          attempt to apply non-function
          1: test_class_impl(SignificantIntervalSearchChi, 158) at /Users/dean/Documents/Work/projects/sis_meeting/significant_interval_search_rewrite/r_wrapper/tests/testthat/test_sigpatsearch.R:239
          2: search_cls(set_defaults = FALSE) at /Users/dean/Documents/Work/projects/sis_meeting/significant_interval_search_rewrite/r_wrapper/tests/testthat/test_sigpatsearch.R:194
          3: new(structure("SignificantIntervalSearchChi", package = "sigpatsearch"), ...)
          4: initialize(value, ...)
          5: initialize(value, ...)
          6: .Object$initialize
          7: (function (classes, fdef, mtable)
                     {
                            methods <- .findInheritedMethods(classes, fdef, mtable)
                                   if (length(methods) == 1L)
                                              return(methods[[1L]])
                                                     else if (length(methods) == 0L) {
                                                                cnames <- paste0("\"", vapply(classes, as.character, ""), "\"", collapse = ", ")
                                                                           stop(gettextf("unable to find an inherited method for function %s for signature %s",
                                                                                                      sQuote(fdef@generic), sQuote(cnames)), domain = NA)
                                                                                  }
                                                                                         else stop("Internal error in finding inherited methods; didn't return a unique method",
                                                                                                            domain = NA)
                                                                                            })(list(structure("SignificantIntervalSearchChi", package = "sigpatsearch")), structure(function (x,
                                                                                                               name)
                                                                                                       standardGeneric("$", .Primitive("$")), generic = structure("$", package = "base"), package = "base", group = list(), valueClass = character(0), signature = "x", default = .Primitive("$"), skeleton = .Primitive("$")(x,
                                                                                                                  name), class = structure("standardGeneric", package = "methods")), <environment>)
                                                                                            8: .findInheritedMethods(classes, fdef, mtable)
                                                                                            9: .eligibleSuperClasses(def@contains, simpleOnly)
                                                                                            10: (function (x)
                                                                                                       x$.self$finalize())(<environment>)

                                                                                            DONE ===========================================================================
                                                                                            >
                                                                                            > devtools::document()
    Updating sigpatsearch documentation
    Loading sigpatsearch
    > devtools::test()
    Loading sigpatsearch
    Testing sigpatsearch
    sigpatsearch: ............................................................................................................................................................................................................
    Testing new wrapper for sigpatsearch: .

    DONE ===========================================================================
    >

